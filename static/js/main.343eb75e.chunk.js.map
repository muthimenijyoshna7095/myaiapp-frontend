{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["API_URL","App","messages","setMessages","useState","input","setInput","React","createElement","className","map","msg","index","key","sender","text","type","value","onChange","e","target","placeholder","onClick","async","trim","userMessage","receiver","res","axios","post","prev","data","error","console","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wOAIA,MAAMA,EAAU,wCAqDDC,MAnDf,WACI,MAAOC,EAAUC,GAAeC,mBAAS,KAClCC,EAAOC,GAAYF,mBAAS,IAqBnC,OACIG,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,UAAI,oBAEJD,IAAAC,cAAA,OAAKC,UAAU,YACVP,EAASQ,IAAI,CAACC,EAAKC,IAChBL,IAAAC,cAAA,OACIK,IAAKD,EACLH,qBAAqC,QAAfE,EAAIG,OAAmB,UAAY,cAEzDP,IAAAC,cAAA,cAASG,EAAIG,OAAO,KAAU,IAAEH,EAAII,QAKhDR,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,SACIQ,KAAK,OACLC,MAAOZ,EACPa,SAAWC,GAAMb,EAASa,EAAEC,OAAOH,OACnCI,YAAY,sBAEhBd,IAAAC,cAAA,UAAQc,QAzCAC,UAClB,GAAKlB,EAAMmB,OAEX,IACI,MAAMC,EAAc,CAAEX,OAAQ,OAAQY,SAAU,MAAOX,KAAMV,GAGvDsB,QAAYC,IAAMC,KAAK7B,EAASyB,GAGtCtB,EAAa2B,GAAS,IAAIA,KAASH,EAAII,OAEvCzB,EAAS,IACX,MAAO0B,GACLC,QAAQD,MAAM,yBAA0BA,MA2BJ,WCvC/BE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAlB,EAAA,GAAAmB,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAACP,EAAG,QAORiC","file":"static/js/main.343eb75e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"; // ✅ Import CSS\n\nconst API_URL = \"https://myaiapp-backend.onrender.com/\";\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = async () => {\n      if (!input.trim()) return; // Prevent empty messages\n  \n      try {\n          const userMessage = { sender: \"User\", receiver: \"Bot\", text: input };\n  \n          // ✅ Send to backend first\n          const res = await axios.post(API_URL, userMessage);\n  \n          // ✅ Only update state with API response (not duplicating user message)\n          setMessages((prev) => [...prev, ...res.data]);\n  \n          setInput(\"\"); // Clear input field\n      } catch (error) {\n          console.error(\"Error sending message:\", error);\n      }\n  };\n  \n\n    return (\n        <div className=\"chat-container\">\n            <h2>AI Messaging App</h2>\n\n            <div className=\"chat-box\">\n                {messages.map((msg, index) => (\n                    <div \n                        key={index} \n                        className={`message ${msg.sender === \"Bot\" ? \"bot-msg\" : \"user-msg\"}`}\n                    >\n                        <strong>{msg.sender}:</strong> {msg.text}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"input-container\">\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Type a message...\"\n                />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}